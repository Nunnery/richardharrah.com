version: 2

# List of jobs
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: yarn install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Build the project
      - run:
          name: Build
          command: yarn build
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest
    steps:
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Install Python
      - run:
          name: Install Python
          command: sudo apt-get update && sudo apt-get install -y -qq python-pip python-dev
      # Install the AWS CLI
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      # Deploy to the S3 bucket
      - run:
          name: Deploy to S3 bucket
          command: aws s3 sync dist s3://richardharrah.com/ --delete

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
